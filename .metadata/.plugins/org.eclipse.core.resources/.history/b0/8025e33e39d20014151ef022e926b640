import java.io.*;
import java.net.*;

public class Worker extends Thread {

	private Socket s;
	private int bufferSize = 64;
	OutputStream out;
	InputStream in;
	
	Worker(Socket _s) {
		s = _s;
		try {
			out = s.getOutputStream();
			in = s.getInputStream();
		}
		catch (IOException e)
		{
			System.out.println("Worker died :" + e.getMessage());
		}
	}

	@Override
	public void run() {
			String str = "";
			byte msg[] = new byte[bufferSize];

			// wait for request
			try {
			while (true) {
				if (in.read(msg) <= 0)
					continue;
				
				str += new String(msg);

				if (str.contains("\r\n\r\n"))
				{
					str = str.substring(0, str.indexOf("\r\n\r\n") + 4); 
					String answer  = HTTPRequest.echo(str);
					out.write(answer.getBytes(), 0, answer.length() - 1);
					out.flush(); // donâ€™t wait for more
					
					if (str.contains("Connection: keep-alive"))
						s.setKeepAlive(true);
					else
						break;
					str = "";
				}
			}
			
			s.close(); // acknowledge end of connection
			System.out.print("Worker finished")
		
		} catch (Exception any) {
			//System.err.println("worker died " + any);
		} /*catch (TimeOutException to) {
			
		}*/
	}
}
